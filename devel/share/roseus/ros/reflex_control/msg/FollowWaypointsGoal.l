;; Auto-generated. Do not edit!


(when (boundp 'reflex_control::FollowWaypointsGoal)
  (if (not (find-package "REFLEX_CONTROL"))
    (make-package "REFLEX_CONTROL"))
  (shadow 'FollowWaypointsGoal (find-package "REFLEX_CONTROL")))
(unless (find-package "REFLEX_CONTROL::FOLLOWWAYPOINTSGOAL")
  (make-package "REFLEX_CONTROL::FOLLOWWAYPOINTSGOAL"))

(in-package "ROS")
;;//! \htmlinclude FollowWaypointsGoal.msg.html


(defclass reflex_control::FollowWaypointsGoal
  :super ros::object
  :slots (_waypoints ))

(defmethod reflex_control::FollowWaypointsGoal
  (:init
   (&key
    ((:waypoints __waypoints) (let (r) (dotimes (i 0) (push (instance reflex_control::cartesian_waypoint :init) r)) r))
    )
   (send-super :init)
   (setq _waypoints __waypoints)
   self)
  (:waypoints
   (&rest __waypoints)
   (if (keywordp (car __waypoints))
       (send* _waypoints __waypoints)
     (progn
       (if __waypoints (setq _waypoints (car __waypoints)))
       _waypoints)))
  (:serialization-length
   ()
   (+
    ;; reflex_control/cartesian_waypoint[] _waypoints
    (apply #'+ (send-all _waypoints :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; reflex_control/cartesian_waypoint[] _waypoints
     (write-long (length _waypoints) s)
     (dolist (elem _waypoints)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; reflex_control/cartesian_waypoint[] _waypoints
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _waypoints (let (r) (dotimes (i n) (push (instance reflex_control::cartesian_waypoint :init) r)) r))
     (dolist (elem- _waypoints)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get reflex_control::FollowWaypointsGoal :md5sum-) "07520baf25a4c29745adfadd9061229a")
(setf (get reflex_control::FollowWaypointsGoal :datatype-) "reflex_control/FollowWaypointsGoal")
(setf (get reflex_control::FollowWaypointsGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
#either one velocity/time_stamps or same as waypoints

cartesian_waypoint[] waypoints


================================================================================
MSG: reflex_control/cartesian_waypoint
geometry_msgs/Pose wp
float64 vel
duration dur
float64 tol_trans
float64 tol_angle

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :reflex_control/FollowWaypointsGoal "07520baf25a4c29745adfadd9061229a")


