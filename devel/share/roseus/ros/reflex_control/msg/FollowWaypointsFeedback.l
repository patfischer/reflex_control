;; Auto-generated. Do not edit!


(when (boundp 'reflex_control::FollowWaypointsFeedback)
  (if (not (find-package "REFLEX_CONTROL"))
    (make-package "REFLEX_CONTROL"))
  (shadow 'FollowWaypointsFeedback (find-package "REFLEX_CONTROL")))
(unless (find-package "REFLEX_CONTROL::FOLLOWWAYPOINTSFEEDBACK")
  (make-package "REFLEX_CONTROL::FOLLOWWAYPOINTSFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude FollowWaypointsFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass reflex_control::FollowWaypointsFeedback
  :super ros::object
  :slots (_desired _actual _error _progress ))

(defmethod reflex_control::FollowWaypointsFeedback
  (:init
   (&key
    ((:desired __desired) (instance geometry_msgs::Pose :init))
    ((:actual __actual) (instance geometry_msgs::Pose :init))
    ((:error __error) (instance geometry_msgs::Pose :init))
    ((:progress __progress) 0.0)
    )
   (send-super :init)
   (setq _desired __desired)
   (setq _actual __actual)
   (setq _error __error)
   (setq _progress (float __progress))
   self)
  (:desired
   (&rest __desired)
   (if (keywordp (car __desired))
       (send* _desired __desired)
     (progn
       (if __desired (setq _desired (car __desired)))
       _desired)))
  (:actual
   (&rest __actual)
   (if (keywordp (car __actual))
       (send* _actual __actual)
     (progn
       (if __actual (setq _actual (car __actual)))
       _actual)))
  (:error
   (&rest __error)
   (if (keywordp (car __error))
       (send* _error __error)
     (progn
       (if __error (setq _error (car __error)))
       _error)))
  (:progress
   (&optional __progress)
   (if __progress (setq _progress __progress)) _progress)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose _desired
    (send _desired :serialization-length)
    ;; geometry_msgs/Pose _actual
    (send _actual :serialization-length)
    ;; geometry_msgs/Pose _error
    (send _error :serialization-length)
    ;; float64 _progress
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose _desired
       (send _desired :serialize s)
     ;; geometry_msgs/Pose _actual
       (send _actual :serialize s)
     ;; geometry_msgs/Pose _error
       (send _error :serialize s)
     ;; float64 _progress
       (sys::poke _progress (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose _desired
     (send _desired :deserialize buf ptr-) (incf ptr- (send _desired :serialization-length))
   ;; geometry_msgs/Pose _actual
     (send _actual :deserialize buf ptr-) (incf ptr- (send _actual :serialization-length))
   ;; geometry_msgs/Pose _error
     (send _error :deserialize buf ptr-) (incf ptr- (send _error :serialization-length))
   ;; float64 _progress
     (setq _progress (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get reflex_control::FollowWaypointsFeedback :md5sum-) "0e2fc254189e46d3d827d900a29d7809")
(setf (get reflex_control::FollowWaypointsFeedback :datatype-) "reflex_control/FollowWaypointsFeedback")
(setf (get reflex_control::FollowWaypointsFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback definition
geometry_msgs/Pose desired
geometry_msgs/Pose actual
geometry_msgs/Pose error
float64 progress


================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :reflex_control/FollowWaypointsFeedback "0e2fc254189e46d3d827d900a29d7809")


