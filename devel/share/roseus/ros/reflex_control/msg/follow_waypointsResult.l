;; Auto-generated. Do not edit!


(when (boundp 'reflex_control::follow_waypointsResult)
  (if (not (find-package "REFLEX_CONTROL"))
    (make-package "REFLEX_CONTROL"))
  (shadow 'follow_waypointsResult (find-package "REFLEX_CONTROL")))
(unless (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT")
  (make-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))

(in-package "ROS")
;;//! \htmlinclude follow_waypointsResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(intern "*SUCCESSFUL*" (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(shadow '*SUCCESSFUL* (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(defconstant reflex_control::follow_waypointsResult::*SUCCESSFUL* 0)
(intern "*PREEMPTED*" (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(shadow '*PREEMPTED* (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(defconstant reflex_control::follow_waypointsResult::*PREEMPTED* -1)
(intern "*INVALID_GOAL*" (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(shadow '*INVALID_GOAL* (find-package "REFLEX_CONTROL::FOLLOW_WAYPOINTSRESULT"))
(defconstant reflex_control::follow_waypointsResult::*INVALID_GOAL* -2)
(defclass reflex_control::follow_waypointsResult
  :super ros::object
  :slots (_final_pose _error_code _error_string ))

(defmethod reflex_control::follow_waypointsResult
  (:init
   (&key
    ((:final_pose __final_pose) (instance geometry_msgs::Pose :init))
    ((:error_code __error_code) 0)
    ((:error_string __error_string) "")
    )
   (send-super :init)
   (setq _final_pose __final_pose)
   (setq _error_code (round __error_code))
   (setq _error_string (string __error_string))
   self)
  (:final_pose
   (&rest __final_pose)
   (if (keywordp (car __final_pose))
       (send* _final_pose __final_pose)
     (progn
       (if __final_pose (setq _final_pose (car __final_pose)))
       _final_pose)))
  (:error_code
   (&optional __error_code)
   (if __error_code (setq _error_code __error_code)) _error_code)
  (:error_string
   (&optional __error_string)
   (if __error_string (setq _error_string __error_string)) _error_string)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose _final_pose
    (send _final_pose :serialization-length)
    ;; int32 _error_code
    4
    ;; string _error_string
    4 (length _error_string)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose _final_pose
       (send _final_pose :serialize s)
     ;; int32 _error_code
       (write-long _error_code s)
     ;; string _error_string
       (write-long (length _error_string) s) (princ _error_string s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose _final_pose
     (send _final_pose :deserialize buf ptr-) (incf ptr- (send _final_pose :serialization-length))
   ;; int32 _error_code
     (setq _error_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _error_string
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _error_string (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get reflex_control::follow_waypointsResult :md5sum-) "20285b7d4b361411f5aecea3b0272841")
(setf (get reflex_control::follow_waypointsResult :datatype-) "reflex_control/follow_waypointsResult")
(setf (get reflex_control::follow_waypointsResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#results definition

geometry_msgs/Pose final_pose
int32 error_code
int32 SUCCESSFUL = 0
int32 PREEMPTED = -1
int32 INVALID_GOAL = -2

string error_string


================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :reflex_control/follow_waypointsResult "20285b7d4b361411f5aecea3b0272841")


